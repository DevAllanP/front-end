{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Workspace\\\\Workspace_2\\\\Project\\\\E-Commerce\\\\front-end\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/auth/auth.service\";\nimport * as i3 from \"src/app/services/paiement.service\";\nimport * as i4 from \"src/app/services/utilisateur.service\";\nexport class StripePaiementComponent {\n  constructor(fb, authService, paiementService, service) {\n    this.fb = fb;\n    this.authService = authService;\n    this.paiementService = paiementService;\n    this.service = service; // This is your test publishable API key.\n\n    this.stripe = Stripe(\"pk_test_51Kb3R1ASJH3PI53qIMReKI1VHjOxF14Apm5MH9qIckiKYhGDFoGDx2n59ijkBpvdef9gpDUU8g9vA0FzqVKSIXXD008WQPy3xd\"); // The items the customer wants to buy\n\n    this.items = [{\n      id: \"xl-tshirt\"\n    }];\n    this.paiement = this.fb.group({\n      nom: ['', Validators.required],\n      prix: ['', Validators.required],\n      price: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    this.authService.currentUser.subscribe({\n      next: u => {\n        this.paiementService.getOrder().subscribe();\n        console.log(u);\n        this.currentUser = u;\n      }\n    });\n  }\n\n  onSubmit() {\n    this.paiementService.cree;\n  }\n\n}\n\nStripePaiementComponent.ɵfac = function StripePaiementComponent_Factory(t) {\n  return new (t || StripePaiementComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.PaiementService), i0.ɵɵdirectiveInject(i4.UtilisateurService));\n};\n\nStripePaiementComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StripePaiementComponent,\n  selectors: [[\"app-stripe-paiement\"]],\n  decls: 15,\n  vars: 0,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"utf-8\"], [\"name\", \"description\", \"content\", \"A demo of a payment on Stripe\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1\"], [\"id\", \"payment-form\"], [\"id\", \"payment-element\"], [\"id\", \"submit\"], [\"id\", \"spinner\", 1, \"spinner\", \"hidden\"], [\"id\", \"button-text\"], [\"id\", \"payment-message\", 1, \"hidden\"]],\n  template: function StripePaiementComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1);\n      i0.ɵɵelementStart(3, \"title\");\n      i0.ɵɵtext(4, \"Accept a payment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"meta\", 2)(6, \"meta\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"body\")(8, \"form\", 4);\n      i0.ɵɵelement(9, \"div\", 5);\n      i0.ɵɵelementStart(10, \"button\", 6);\n      i0.ɵɵelement(11, \"div\", 7);\n      i0.ɵɵelementStart(12, \"span\", 8);\n      i0.ɵɵtext(13, \"Pay now\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(14, \"div\", 9);\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdHJpcGUtcGFpZW1lbnQuY29tcG9uZW50LmNzcyJ9 */\"]\n});\nlet elements;\ninitialize();\ncheckStatus();\ndocument.querySelector(\"#payment-form\").addEventListener(\"submit\", handleSubmit); // Fetches a payment intent and captures the client secret\n\nfunction initialize() {\n  return _initialize.apply(this, arguments);\n}\n\nfunction _initialize() {\n  _initialize = _asyncToGenerator(function* () {\n    const response = yield fetch(\"/create-payment-intent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        items\n      })\n    });\n    const {\n      clientSecret\n    } = yield response.json();\n    const appearance = {\n      theme: 'stripe'\n    };\n    elements = stripe.elements({\n      appearance,\n      clientSecret\n    });\n    const paymentElement = elements.create(\"payment\");\n    paymentElement.mount(\"#payment-element\");\n  });\n  return _initialize.apply(this, arguments);\n}\n\nfunction handleSubmit(_x) {\n  return _handleSubmit.apply(this, arguments);\n} // Fetches the payment intent status after payment submission\n\n\nfunction _handleSubmit() {\n  _handleSubmit = _asyncToGenerator(function* (e) {\n    e.preventDefault();\n    setLoading(true);\n    const {\n      error\n    } = yield stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: \"http://localhost:4242/checkout.html\"\n      }\n    }); // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      showMessage(error.message);\n    } else {\n      showMessage(\"An unexpected error occured.\");\n    }\n\n    setLoading(false);\n  });\n  return _handleSubmit.apply(this, arguments);\n}\n\nfunction checkStatus() {\n  return _checkStatus.apply(this, arguments);\n} // ------- UI helpers -------\n\n\nfunction _checkStatus() {\n  _checkStatus = _asyncToGenerator(function* () {\n    const clientSecret = new URLSearchParams(window.location.search).get(\"payment_intent_client_secret\");\n\n    if (!clientSecret) {\n      return;\n    }\n\n    const {\n      paymentIntent\n    } = yield stripe.retrievePaymentIntent(clientSecret);\n\n    switch (paymentIntent.status) {\n      case \"succeeded\":\n        showMessage(\"Payment succeeded!\");\n        break;\n\n      case \"processing\":\n        showMessage(\"Your payment is processing.\");\n        break;\n\n      case \"requires_payment_method\":\n        showMessage(\"Your payment was not successful, please try again.\");\n        break;\n\n      default:\n        showMessage(\"Something went wrong.\");\n        break;\n    }\n  });\n  return _checkStatus.apply(this, arguments);\n}\n\nfunction showMessage(messageText) {\n  const messageContainer = document.querySelector(\"#payment-message\");\n  messageContainer.classList.remove(\"hidden\");\n  messageContainer.textContent = messageText;\n  setTimeout(function () {\n    messageContainer.classList.add(\"hidden\");\n    messageText.textContent = \"\";\n  }, 4000);\n} // Show a spinner on payment submission\n\n\nfunction setLoading(isLoading) {\n  if (isLoading) {\n    // Disable the button and show a spinner\n    document.querySelector(\"#submit\").disabled = true;\n    document.querySelector(\"#spinner\").classList.remove(\"hidden\");\n    document.querySelector(\"#button-text\").classList.add(\"hidden\");\n  } else {\n    document.querySelector(\"#submit\").disabled = false;\n    document.querySelector(\"#spinner\").classList.add(\"hidden\");\n    document.querySelector(\"#button-text\").classList.remove(\"hidden\");\n  }\n}","map":{"version":3,"sources":["C:/Workspace/Workspace_2/Project/E-Commerce/front-end/src/app/modules/stripe-paiement/stripe-paiement.component.ts"],"names":["Validators","i0","i1","i2","i3","i4","StripePaiementComponent","constructor","fb","authService","paiementService","service","stripe","Stripe","items","id","paiement","group","nom","required","prix","price","ngOnInit","currentUser","subscribe","next","u","getOrder","console","log","onSubmit","cree","ɵfac","StripePaiementComponent_Factory","t","ɵɵdirectiveInject","FormBuilder","AuthService","PaiementService","UtilisateurService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","StripePaiementComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","styles","elements","initialize","checkStatus","document","querySelector","addEventListener","handleSubmit","response","fetch","method","headers","body","JSON","stringify","clientSecret","json","appearance","theme","paymentElement","create","mount","e","preventDefault","setLoading","error","confirmPayment","confirmParams","return_url","showMessage","message","URLSearchParams","window","location","search","get","paymentIntent","retrievePaymentIntent","status","messageText","messageContainer","classList","remove","textContent","setTimeout","add","isLoading","disabled"],"mappings":"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","sourcesContent":["import { Validators } from '@angular/forms';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/forms\";\r\nimport * as i2 from \"src/app/auth/auth.service\";\r\nimport * as i3 from \"src/app/services/paiement.service\";\r\nimport * as i4 from \"src/app/services/utilisateur.service\";\r\nexport class StripePaiementComponent {\r\n    constructor(fb, authService, paiementService, service) {\r\n        this.fb = fb;\r\n        this.authService = authService;\r\n        this.paiementService = paiementService;\r\n        this.service = service;\r\n        // This is your test publishable API key.\r\n        this.stripe = Stripe(\"pk_test_51Kb3R1ASJH3PI53qIMReKI1VHjOxF14Apm5MH9qIckiKYhGDFoGDx2n59ijkBpvdef9gpDUU8g9vA0FzqVKSIXXD008WQPy3xd\");\r\n        // The items the customer wants to buy\r\n        this.items = [{ id: \"xl-tshirt\" }];\r\n        this.paiement = this.fb.group({\r\n            nom: ['', Validators.required],\r\n            prix: ['', Validators.required],\r\n            price: ['', Validators.required]\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.authService.currentUser.subscribe({\r\n            next: (u) => {\r\n                this.paiementService.getOrder().subscribe();\r\n                console.log(u);\r\n                this.currentUser = u;\r\n            },\r\n        });\r\n    }\r\n    onSubmit() {\r\n        this.paiementService.cree;\r\n    }\r\n}\r\nStripePaiementComponent.ɵfac = function StripePaiementComponent_Factory(t) { return new (t || StripePaiementComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.PaiementService), i0.ɵɵdirectiveInject(i4.UtilisateurService)); };\r\nStripePaiementComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: StripePaiementComponent, selectors: [[\"app-stripe-paiement\"]], decls: 15, vars: 0, consts: [[\"lang\", \"en\"], [\"charset\", \"utf-8\"], [\"name\", \"description\", \"content\", \"A demo of a payment on Stripe\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1\"], [\"id\", \"payment-form\"], [\"id\", \"payment-element\"], [\"id\", \"submit\"], [\"id\", \"spinner\", 1, \"spinner\", \"hidden\"], [\"id\", \"button-text\"], [\"id\", \"payment-message\", 1, \"hidden\"]], template: function StripePaiementComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\r\n        i0.ɵɵelement(2, \"meta\", 1);\r\n        i0.ɵɵelementStart(3, \"title\");\r\n        i0.ɵɵtext(4, \"Accept a payment\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(5, \"meta\", 2)(6, \"meta\", 3);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(7, \"body\")(8, \"form\", 4);\r\n        i0.ɵɵelement(9, \"div\", 5);\r\n        i0.ɵɵelementStart(10, \"button\", 6);\r\n        i0.ɵɵelement(11, \"div\", 7);\r\n        i0.ɵɵelementStart(12, \"span\", 8);\r\n        i0.ɵɵtext(13, \"Pay now\");\r\n        i0.ɵɵelementEnd()();\r\n        i0.ɵɵelement(14, \"div\", 9);\r\n        i0.ɵɵelementEnd()()();\r\n    } }, styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdHJpcGUtcGFpZW1lbnQuY29tcG9uZW50LmNzcyJ9 */\"] });\r\nlet elements;\r\ninitialize();\r\ncheckStatus();\r\ndocument\r\n    .querySelector(\"#payment-form\")\r\n    .addEventListener(\"submit\", handleSubmit);\r\n// Fetches a payment intent and captures the client secret\r\nasync function initialize() {\r\n    const response = await fetch(\"/create-payment-intent\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ items }),\r\n    });\r\n    const { clientSecret } = await response.json();\r\n    const appearance = {\r\n        theme: 'stripe',\r\n    };\r\n    elements = stripe.elements({ appearance, clientSecret });\r\n    const paymentElement = elements.create(\"payment\");\r\n    paymentElement.mount(\"#payment-element\");\r\n}\r\nasync function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const { error } = await stripe.confirmPayment({\r\n        elements,\r\n        confirmParams: {\r\n            // Make sure to change this to your payment completion page\r\n            return_url: \"http://localhost:4242/checkout.html\",\r\n        },\r\n    });\r\n    // This point will only be reached if there is an immediate error when\r\n    // confirming the payment. Otherwise, your customer will be redirected to\r\n    // your `return_url`. For some payment methods like iDEAL, your customer will\r\n    // be redirected to an intermediate site first to authorize the payment, then\r\n    // redirected to the `return_url`.\r\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\r\n        showMessage(error.message);\r\n    }\r\n    else {\r\n        showMessage(\"An unexpected error occured.\");\r\n    }\r\n    setLoading(false);\r\n}\r\n// Fetches the payment intent status after payment submission\r\nasync function checkStatus() {\r\n    const clientSecret = new URLSearchParams(window.location.search).get(\"payment_intent_client_secret\");\r\n    if (!clientSecret) {\r\n        return;\r\n    }\r\n    const { paymentIntent } = await stripe.retrievePaymentIntent(clientSecret);\r\n    switch (paymentIntent.status) {\r\n        case \"succeeded\":\r\n            showMessage(\"Payment succeeded!\");\r\n            break;\r\n        case \"processing\":\r\n            showMessage(\"Your payment is processing.\");\r\n            break;\r\n        case \"requires_payment_method\":\r\n            showMessage(\"Your payment was not successful, please try again.\");\r\n            break;\r\n        default:\r\n            showMessage(\"Something went wrong.\");\r\n            break;\r\n    }\r\n}\r\n// ------- UI helpers -------\r\nfunction showMessage(messageText) {\r\n    const messageContainer = document.querySelector(\"#payment-message\");\r\n    messageContainer.classList.remove(\"hidden\");\r\n    messageContainer.textContent = messageText;\r\n    setTimeout(function () {\r\n        messageContainer.classList.add(\"hidden\");\r\n        messageText.textContent = \"\";\r\n    }, 4000);\r\n}\r\n// Show a spinner on payment submission\r\nfunction setLoading(isLoading) {\r\n    if (isLoading) {\r\n        // Disable the button and show a spinner\r\n        document.querySelector(\"#submit\").disabled = true;\r\n        document.querySelector(\"#spinner\").classList.remove(\"hidden\");\r\n        document.querySelector(\"#button-text\").classList.add(\"hidden\");\r\n    }\r\n    else {\r\n        document.querySelector(\"#submit\").disabled = false;\r\n        document.querySelector(\"#spinner\").classList.add(\"hidden\");\r\n        document.querySelector(\"#button-text\").classList.remove(\"hidden\");\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}